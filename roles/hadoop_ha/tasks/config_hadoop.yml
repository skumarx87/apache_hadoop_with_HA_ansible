- name: creating hdfs workers file
  become: true
  become_user: "{{ HADOOP_USER }}"
  blockinfile:
   path: "{{ bigdata_new_release_dir }}/hadoop-{{ hadoop_version }}/etc/hadoop/workers"
   block: |
    {% for host in groups['dataNode'] %} 
    {{  host }}
    {% endfor %}

- name: Creating namenode directory
  become: true
  become_user: "{{ HADOOP_USER }}"
  file:
    path: "{{ bigdata_dir }}/data/name_dir"
    state: directory
  when: not hadoop_installed_status.stat.exists and inventory_hostname in groups['nameNode']

- name: creating core-site.xml file
  become: true
  become_user: "{{ HADOOP_USER }}"
  template: src=core-site.xml dest="{{ bigdata_new_release_dir }}/hadoop-{{ hadoop_version }}/etc/hadoop/core-site.xml" mode=644

- name: creating hdfs-site.xml file
  become: true
  become_user: "{{ HADOOP_USER }}"
  template: src=hdfs-site.xml dest="{{ bigdata_new_release_dir }}/hadoop-{{ hadoop_version }}/etc/hadoop/hdfs-site.xml" mode=644

- name: Copy Hadoop mapred-site.xml
  become: true
  become_user: "{{ HADOOP_USER }}"
  template: src=mapred-site.xml dest="{{ bigdata_new_release_dir }}/hadoop-{{ hadoop_version }}/etc/hadoop/" mode=644

- name: Copy Hadoop hadoop-env.sh
  become: true
  become_user: "{{ HADOOP_USER }}"
  template: src=hadoop-env.sh dest="{{ bigdata_new_release_dir }}/hadoop-{{ hadoop_version }}/etc/hadoop/" mode=644

- name: stopping zookeeper
  debug: msg=''
  changed_when: false
  notify: stopping_zookeeper
  when: is_hadoop_already_installed

- name: starting zookeeper
  debug: msg='' 
  #changed_when: false
  notify: starting_zookeeper
  when: not is_hadoop_already_installed
 

- name: copying journalnode.service
  become: true
  become_user: root
  template: src=journalnode.service dest="/etc/systemd/system/" mode=644
  notify: enable_journalnode_service
  when: inventory_hostname in groups['journalNode']

- name: copying namenode.service
  become: true
  become_user: root
  template: src=namenode.service dest="/etc/systemd/system/" mode=644
  notify: enable_namenode_service
  when: inventory_hostname in groups['nameNode']

- name: copying zkfc.service
  become: true
  become_user: root
  template: src=zkfc.service dest="/etc/systemd/system/" mode=644
  notify: enable_zkfc_service
  when: inventory_hostname in groups['nameNode']

- name: copying datanode.service 
  become: true
  become_user: root
  template: src=datanode.service dest="/etc/systemd/system/" mode=644
  notify: enable_datanode_service
  when: inventory_hostname in groups['dataNode']

- name: stopping zkfc and format
  #debug: msg=''
  #changed_when: false
  command: /bin/true
  notify:
    #    - starting_zookeeper 
    - starting_journalnode
    - delete_hadoop_ha_node_from_zookeeper
    - namenode_format
    - zkfc_format
    - starting_active_namenode
    - standby_namenode_bootstrap
    - starting_standy_namenode
    - starting_zkfc
    - starting_datanode
  when: not is_hadoop_already_installed

